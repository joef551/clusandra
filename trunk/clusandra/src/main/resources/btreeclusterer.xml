<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">


	<!-- This Spring XML configuration file is used for test purposes and is 
		meant for a CluSandra Clusterer. -->
	
	<bean id="btreeAgent" class="clusandra.core.QueueAgent">
		<property name="jmsReadTemplate" ref="jmsTemplate" />
		<property name="jmsReadDestination" value="treeQueue" />
		<property name="readSize" value="200" />
		<property name="processor" ref="bTreeClusterer" />
	</bean>
	
	<!-- The clusterer that is wired to the QueueAgent -->
	<bean id="bTreeClusterer" class="clusandra.clusterers.BTreeClusterer">
	    <property name="queueAgent" ref="btreeAgent" />
	    <property name="overlapFactor" value="1.0" />
	    <property name="sparseFactor" value="0.25" />
	    <property name="lambda" value="0.5" />
	    <property name="maxEntries" value="3" />
	</bean>

	<!-- The connection factory for the JMS provider, which in this case is 
		ActiveMQ -->
	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		   <property name="brokerURL" value="tcp://localhost:61616" /> 
		<!--   <property name="brokerURL" value="tcp://192.168.1.110:61616" />-->
	</bean>

	<!-- Spring JMS Template -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<!-- The connection factory that is to be used by this template. -->
		<property name="connectionFactory" ref="pooledJmsConnectionFactory" />
		<!-- Set the timeout to use for receive calls (in milliseconds). The default 
			is RECEIVE_TIMEOUT_INDEFINITE_WAIT, which indicates a blocking receive without 
			timeout. If the receive timeout expires, the QueueAgent invokes the Clusterer's 
			processDataRecords() method with whatever DataRecords arrived during that 
			time. If no DataRecords have arrived, then the QueueAgent simply goes back 
			and blocks on the queue. -->
		<property name="receiveTimeout" value="2000" />
		<!-- The default message acknowledgement mode for the QueueAgent. -->
		<property name="sessionAcknowledgeModeName" value="CLIENT_ACKNOWLEDGE" />
	</bean>

	<!-- ActiveMQ's pooled connection factory -->
	<bean id="pooledJmsConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>

	<!-- These beans are JMX related and required in order to manage the QueueAgent 
		via JMX. These beans should not be modified. -->
	<!-- <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean" 
		/> -->
	<bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
		<property name="assembler" ref="assembler" />
		<property name="namingStrategy" ref="namingStrategy" />
	</bean>
	<!-- will create management interface using annotation meta-data -->
	<bean id="assembler"
		class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
		<property name="attributeSource" ref="jmxAttributeSource" />
	</bean>
	<bean id="jmxAttributeSource"
		class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource" />
	<!-- will pick up the ObjectName from the annotation -->
	<bean id="namingStrategy"
		class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
		<property name="attributeSource" ref="jmxAttributeSource" />
	</bean>

</beans>